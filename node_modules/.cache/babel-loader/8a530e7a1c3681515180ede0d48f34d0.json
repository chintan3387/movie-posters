{"ast":null,"code":"import _defineProperty from \"/Users/chintan.desai/Projects/movie-db-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport { createReducer, createAsyncReducer } from '../common/helper';\nimport { keys as movieActionKeys } from '../actions/movie-db-actions';\nimport { ActionSchedule } from 'material-ui/svg-icons';\nexport const movieDetailsReducer = createReducer({\n  isOpen: false\n}, {});\nexport const moviesSuccessReducer = (state, action) => {\n  const existingMovies = state.response ? state.response.results : [];\n  return _objectSpread({}, state, {\n    isLoading: false,\n    response: _objectSpread({}, action.response, {\n      results: [...existingMovies, ...action.response.results]\n    })\n  });\n};","map":{"version":3,"sources":["/Users/chintan.desai/Projects/movie-db-app/src/reducers/moviesReducers.js"],"names":["combineReducers","createReducer","createAsyncReducer","keys","movieActionKeys","ActionSchedule","movieDetailsReducer","isOpen","moviesSuccessReducer","state","action","existingMovies","response","results","isLoading"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,kBAAlD;AACA,SAASC,IAAI,IAAIC,eAAjB,QAAwC,6BAAxC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,OAAO,MAAMC,mBAAmB,GAAGL,aAAa,CAAC;AAAEM,EAAAA,MAAM,EAAE;AAAV,CAAD,EAAoB,EAApB,CAAzC;AAIP,OAAO,MAAMC,oBAAoB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnD,QAAMC,cAAc,GAAGF,KAAK,CAACG,QAAN,GAAiBH,KAAK,CAACG,QAAN,CAAeC,OAAhC,GAA0C,EAAjE;AAEA,2BACOJ,KADP;AAEIK,IAAAA,SAAS,EAAE,KAFf;AAGIF,IAAAA,QAAQ,oBACDF,MAAM,CAACE,QADN;AAEJC,MAAAA,OAAO,EAAE,CACL,GAAGF,cADE,EAEL,GAAGD,MAAM,CAACE,QAAP,CAAgBC,OAFd;AAFL;AAHZ;AAWH,CAdM","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer, createAsyncReducer } from '../common/helper';\nimport { keys as movieActionKeys } from '../actions/movie-db-actions';\nimport { ActionSchedule } from 'material-ui/svg-icons';\n\nexport const movieDetailsReducer = createReducer({ isOpen: false }, {\n\n});\n\nexport const moviesSuccessReducer = (state, action) => {\n    const existingMovies = state.response ? state.response.results : [];\n\n    return {\n        ...state,\n        isLoading: false,\n        response: {\n            ...action.response,\n            results: [\n                ...existingMovies,\n                ...action.response.results\n            ]\n        }\n    };\n}"]},"metadata":{},"sourceType":"module"}